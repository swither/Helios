<Grid x:Class="GadrocsWorkshop.Helios.Controls.RotaryInteractionEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             xmlns:Helios="clr-namespace:GadrocsWorkshop.Helios"
             xmlns:HeliosBase="clr-namespace:GadrocsWorkshop.Helios.Controls"
             xmlns:HeliosSdk="clr-namespace:GadrocsWorkshop.Helios.Windows.Controls"                      
             Height="Auto" d:DesignWidth="180">
    <Grid.Resources>
        <Helios:EnumConverter Type="{x:Type HeliosBase:RotaryClickType}" x:Key="ClickTypes" />
        <Helios:EnumConverter Type="{x:Type HeliosBase:RotaryClickAllowRotationType}" x:Key="AllowRotationTypes" />
        <Helios:EnumConverter Type="{x:Type HeliosBase:PushButtonType}" x:Key="ButtonTypes" />

        <Style x:Key="SwipeLabelStyle" TargetType="Label">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Control.ClickType}" Value="Touch">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SwipeSliderStyle" TargetType="Slider">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Control.ClickType}" Value="Touch">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ShowIfClickConfigurable" TargetType="FrameworkElement">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Control.ClickConfigurable}" Value="true">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </Grid.Resources>
    <Grid Background="Transparent" Margin="4">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" MinWidth="80"/>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TextBlock Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Margin="4,10,2,2" Style="{StaticResource Heading2}">Interaction / Touch</TextBlock>
        <Label Grid.Column="0" Grid.Row="1" FontSize="10" HorizontalAlignment="Right" Content="Center Click Type"  Style="{StaticResource ShowIfClickConfigurable}">
            <Label.ToolTip>Type of button which will be eumlated by pressing center of control.</Label.ToolTip>
        </Label>
        <ComboBox Grid.Column="1" Grid.Row="1" FontSize="10" Margin="0,2,0,2" HorizontalAlignment="Stretch" ItemsSource="{Binding Source={StaticResource ButtonTypes}, Path=DisplayNames}" Style="{StaticResource ShowIfClickConfigurable}" SelectedItem="{Binding Path=Control.ButtonType, Converter={StaticResource ButtonTypes}}" />
        <Label Grid.Column="0" Grid.Row="2" FontSize="10" HorizontalAlignment="Right" Margin="0,1,0,0">
            <Label.ToolTip>When set to touch this switch will respond to control regions (left/right) and switch the switch appropriatly. 
                Swipe will switch the switch in the direction you swipe your finger or mouse using a circular motion.  
                Radial precision mode involves dragging a handle out of the control and then rotating that around the control.</Label.ToolTip> Click Type
        </Label>
        <ComboBox Grid.Column="1" Grid.Row="2" FontSize="10" Margin="0,2,0,2" HorizontalAlignment="Stretch" ItemsSource="{Binding Source={StaticResource ClickTypes}, Path=DisplayNames}" SelectedItem="{Binding Path=Control.ClickType, Converter={StaticResource ClickTypes}}" />
        <Label Grid.Column="0" Grid.Row="3" FontSize="10" HorizontalAlignment="Right" Content="Allow Rotation"  Style="{StaticResource ShowIfClickConfigurable}">
            <Label.ToolTip>Select types of knob rotation to be allowed.</Label.ToolTip>
        </Label>
        <ComboBox Grid.Column="1" Grid.Row="3"  FontSize="10" Margin="0,2,0,2" HorizontalAlignment="Stretch" ItemsSource="{Binding Source={StaticResource AllowRotationTypes}, Path=DisplayNames}" Style="{StaticResource ShowIfClickConfigurable}" SelectedItem="{Binding Path=Control.AllowRotation, Converter={StaticResource AllowRotationTypes}}" />
        <Label Grid.Column="0" Grid.Row="4" FontSize="10" HorizontalAlignment="Right" Margin="0,1,0,0" Style="{StaticResource SwipeLabelStyle}">
            <Label.ToolTip>When set left it will take more rotation to switch a position to the right postions will move rapidly.</Label.ToolTip> Sensitivity
        </Label>
        <Slider Grid.Column="1" Grid.Row="4" Margin="0,6,0,0" Minimum="-1" Maximum="1" TickFrequency="0.1" TickPlacement="BottomRight" Value="{Binding Control.Sensitivity}" Style="{StaticResource SwipeSliderStyle}" />
        <Label Grid.Column="0" Grid.Row="5" FontSize="10" HorizontalAlignment="Right" Margin="0,1,0,0">
            <Label.ToolTip>When set, mousewheel will move the rotary.</Label.ToolTip> Mouse Wheel
        </Label>
        <CheckBox Grid.Column="1" Grid.Row="5" VerticalAlignment="Top" Margin="0,6,6,6" IsChecked="{Binding Path=Control.MouseWheelAction}" />
        <Label Grid.Column="0" Grid.Row="6" FontSize="10" HorizontalAlignment="Right" Margin="0,1,0,0">
            <Label.ToolTip>When set, control may draw additional visualization for interaction that is not physically realistic.</Label.ToolTip> Visualizations
        </Label>
        <CheckBox Grid.Column="1" Grid.Row="6" VerticalAlignment="Top" Margin="0,6,6,6" IsChecked="{Binding Path=Control.VisualizeInteraction}" />
        <Label Grid.Column="0" Grid.Row="7" FontSize="10" HorizontalAlignment="Right" Margin="0,1,0,0">
            <Label.ToolTip>When set, this control can be connected to a control router by clicking on it.</Label.ToolTip> Routable
        </Label>
        <CheckBox Grid.Column="1" Grid.Row="7" VerticalAlignment="Top" Margin="0,6,6,6" IsChecked="{Binding Path=Control.Routable}" />
    </Grid>
</Grid>
